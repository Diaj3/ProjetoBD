CREATE SCHEMA MANAGEMENT;

/*Completed*/
CREATE TABLE MANAGEMENT.CUSTOMER(
	NIF				CHAR(9) NOT NULL,
	Fname			VARCHAR(20) NOT NULL,
	Lname			VARCHAR(20) NOT NULL,
	PhoneNum		INT NOT NULL CHECK(PhoneNum > 0),
	[Address]		VARCHAR(50),
	Pass			VARCHAR(30) NOT NULL CHECK(LEN(Pass) > 7),
	PRIMARY KEY(NIF)
);

/*Completed*/
CREATE TABLE MANAGEMENT.HOTEL(
	Hotel_id	CHAR(10) NOT NULL,
	Hotel_name	VARCHAR(20) NOT NULL,
	PhoneNum	INT NOT NULL CHECK(PhoneNum > 0),
	Postalcode	CHAR(8) NOT NULL,
	[Address]	VARCHAR(30) NOT NULL,
	PRIMARY KEY(Hotel_id)
	
);

ALTER TABLE MANAGEMENT.HOTEL
ADD password varchar(30)

/*Completed*/
CREATE TABLE MANAGEMENT.ROOM_TYPE(
	RoomType	VARCHAR(20) NOT NULL CHECK(LEN(RoomType) > 0),
	RoomPrice	INT NOT NULL CHECK(RoomPrice > 0),
	PRIMARY KEY(RoomType)
);

/*Completed*/
CREATE TABLE MANAGEMENT.ROOM(
	RoomNum		INT NOT NULL,
	RoomType	VARCHAR(20) NOT NULL CHECK(LEN(RoomType) > 0),
	Hotel_id	CHAR(10) NOT NULL,
	PRIMARY KEY(RoomNum),
	FOREIGN KEY(Hotel_id) REFERENCES MANAGEMENT.HOTEL(Hotel_id),
	FOREIGN KEY(RoomType) REFERENCES MANAGEMENT.ROOM_TYPE(RoomType)
);

/*EMPLOYEES RELATED TABLES ------------------------------------------- */
CREATE TABLE MANAGEMENT.EMPLOYEE(
	Staff_id	CHAR(10) NOT NULL,
	[Address]	VARCHAR(50),
	NIF			CHAR(9) NOT NULL,
	Fname		VARCHAR(20) NOT NULL CHECK(LEN(Fname) > 2),
	Lname		VARCHAR(20) NOT NULL CHECK(LEN(Lname) > 2),
	BirthDate	DATE NOT NULL,
	PhoneNum	INT CHECK(PhoneNum > 0),
	Hotel_id	CHAR(10) NOT NULL,
	PRIMARY KEY(Staff_id),
	FOREIGN KEY(Hotel_id) REFERENCES MANAGEMENT.HOTEL(Hotel_id)
);

CREATE TABLE MANAGEMENT.SCHEDULE(
	Work_shift	VARCHAR(30) NOT NULL,
	PRIMARY KEY (Work_shift)
);

CREATE TABLE MANAGEMENT.CLEANER(
	Cleaner_id	CHAR(10) NOT NULL,
	PRIMARY KEY (Cleaner_id)
);

ALTER TABLE MANAGEMENT.CLEANER
ADD CONSTRAINT c1
FOREIGN KEY (Cleaner_id) REFERENCES MANAGEMENT.EMPLOYEE(Staff_id)

CREATE TABLE MANAGEMENT.RECEPTIONIST(
	Receptionist_id	CHAR(10) NOT NULL,
	PRIMARY KEY (Receptionist_id)
);

ALTER TABLE MANAGEMENT.RECEPTIONIST
ADD CONSTRAINT c2
FOREIGN KEY (Receptionist_id) REFERENCES MANAGEMENT.EMPLOYEE(Staff_id)

CREATE TABLE MANAGEMENT.CHEF(
	Chef_id	CHAR(10) NOT NULL,
	PRIMARY KEY (Chef_id)
);

ALTER TABLE MANAGEMENT.CHEF
ADD CONSTRAINT c3
FOREIGN KEY (Chef_id) REFERENCES MANAGEMENT.EMPLOYEE(Staff_id)

CREATE TABLE MANAGEMENT.BARTENDER(
	Bartender_id	CHAR(10) NOT NULL,
	PRIMARY KEY (Bartender_id)
);

ALTER TABLE MANAGEMENT.BARTENDER
ADD CONSTRAINT c4
FOREIGN KEY (Bartender_id) REFERENCES MANAGEMENT.EMPLOYEE(Staff_id)

/* -------------------------------------------------------------------------- */

CREATE TABLE MANAGEMENT.ACCOUNT_RECORD(
	NIF					CHAR(9) NOT NULL,
	Account_record_id	INT NOT NULL CHECK(Account_record_id > 0),
	[Date]				DATE,
	PRIMARY KEY(Account_record_id),
	FOREIGN KEY(NIF) REFERENCES MANAGEMENT.CUSTOMER(NIF)
);

CREATE TABLE MANAGEMENT.DRINK(
	Account_record_id	INT NOT NULL CHECK(Account_record_id > 0),
	Bartender_id		CHAR(10) NOT NULL,
	Drink_price			INT NOT NULL CHECK(Drink_price > 0),
	Drink_name			VARCHAR(20) NOT NULL CHECK(LEN(Drink_name) > 0),
	FOREIGN KEY(Bartender_id) REFERENCES MANAGEMENT.BARTENDER(Bartender_id),
	FOREIGN KEY(Account_record_id) REFERENCES MANAGEMENT.ACCOUNT_RECORD(Account_record_id)
);

CREATE TABLE MANAGEMENT.MEAL(
	Account_record_id	INT NOT NULL CHECK(Account_record_id > 0),
	Chef_id				CHAR(10) NOT NULL,
	Meal_price			INT NOT NULL CHECK(Meal_price > 0),
	Meal_name			VARCHAR(20) NOT NULL CHECK(LEN(Meal_name) > 0),
	FOREIGN KEY(Chef_id) REFERENCES MANAGEMENT.CHEF(Chef_id),
	FOREIGN KEY(Account_record_id) REFERENCES MANAGEMENT.ACCOUNT_RECORD(Account_record_id)
);

CREATE TABLE MANAGEMENT.BOOKING(
	Account_record_id	INT NOT NULL CHECK(Account_record_id > 0),
	BookingNum	INT NOT NULL CHECK(BookingNum > 0),
	Receptionist_id	CHAR(10) NOT NULL,
	/*Allows date and hours*/
	Checkin_time	DATETIME2 NOT NULL,	
	Checkout_time	DATETIME2 NOT NULL,
	PRIMARY KEY(BookingNum),
	FOREIGN KEY(Receptionist_id) REFERENCES MANAGEMENT.RECEPTIONIST(Receptionist_id)
);

/*RELATION TABLES*/
CREATE TABLE MANAGEMENT.ROOM_SERVICE(
	Cleaner_id	CHAR(10) NOT NULL,
	RoomNum		INT NOT NULL,
	FOREIGN KEY(RoomNum) REFERENCES MANAGEMENT.ROOM(RoomNum),
	FOREIGN KEY(Cleaner_id) REFERENCES MANAGEMENT.CLEANER(Cleaner_id)
);

CREATE TABLE MANAGEMENT.HAS(
	Staff_id	CHAR(10) NOT NULL,
	Work_shift	VARCHAR(30) NOT NULL,
	FOREIGN KEY(Staff_id) REFERENCES MANAGEMENT.EMPLOYEE(Staff_id),
	FOREIGN KEY(Work_shift) REFERENCES MANAGEMENT.SCHEDULE(Work_shift)
);

CREATE TABLE MANAGEMENT.IS_ASSIGNED(
	BookingNum	INT NOT NULL CHECK(BookingNum > 0),
	RoomNum		INT NOT NULL,
	FOREIGN KEY(RoomNum) REFERENCES MANAGEMENT.ROOM(RoomNum),
	FOREIGN KEY(BookingNum) REFERENCES MANAGEMENT.BOOKING(BookingNum)
);

